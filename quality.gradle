//noinspection GrPackage
apply plugin: 'findbugs'
apply plugin: 'pmd'

def final String QUALITY_DIR       = "quality"
def final String SOURCE            = "src"
def final String INCLUDE_JAVA      = "**/*.java"
def final String EXCLUDE_GENERATED = "**/gen/**"

android {
    lintOptions {
        abortOnError true
        xmlReport    false
        htmlReport   true

        lintConfig file("${project.rootDir}/${QUALITY_DIR}/lint/lint.xml")
        htmlOutput file("$project.buildDir/reports/lint/lint-result.html")
        xmlOutput  file("$project.buildDir/reports/lint/lint-result.xml")
    }
}

/*
 * Find Bugs -  a program which uses static analysis to look for bugs in Java code.
 */
task findbugs(type: FindBugs) {
    ignoreFailures = false
    effort = "max"
    reportLevel = "high"
    excludeFilter = new File("${project.rootDir}/${QUALITY_DIR}/findbugs/findbugs-filter.xml")
    classes = files("${project.buildDir}/intermediates/classes")

    source SOURCE
    include INCLUDE_JAVA
    exclude EXCLUDE_GENERATED

    reports {
        xml.enabled = false
        html.enabled = true

        xml {
            destination "$project.buildDir/reports/findbugs/findbugs.xml"
        }
        html {
            destination "$project.buildDir/reports/findbugs/findbugs.html"
        }
    }

    classpath = files()
}

/*
 * Programming Mistake Detector - a source code analyzer. It finds common programming flaws.
 */
task pmd(type: Pmd) {
    ignoreFailures = false
    ruleSetFiles = files("${project.rootDir}/${QUALITY_DIR}/pmd/pmd-ruleset.xml")
    ruleSets = []

    source SOURCE
    include INCLUDE_JAVA
    exclude EXCLUDE_GENERATED

    reports {
        xml.enabled = false
        html.enabled = true
        xml {
            destination "$project.buildDir/reports/pmd/pmd.xml"
        }
        html {
            destination "$project.buildDir/reports/pmd/pmd.html"
        }
    }
}

check.dependsOn 'findbugs', 'pmd', 'lint'